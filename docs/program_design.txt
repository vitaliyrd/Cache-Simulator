Classes:
CPU - responsible for calling memory read/write operations
Cache - responsible for returning/fetching the cached contents of memory
System - responsible for calling CPU to execute instructions (in this case memory accesses)
Memory - responsible for fetching the contents of memory
Main program - user front end that controls the System instance

CPU:
+ L1 Instruction Cache
+ L1 Data Cache
+ L2 Cache
+ Reference to System
- void execute(Instruction)

Instruction: just a wrapper class that holds the specs of an instruction

Cache:
+ int accesses
+ int misses
+ Array of the cache contents
- boolean locate(int location)
- void fetch(int location)

System:
+ Array of the CPUs
+ Array of the memories
+ L3 Cache
+ MESI Indicator for the L3 Cache
- void execute(enum instruction, int address)
- toString()

Memory:
+ int reads
+ int writes
+ int size (in bytes)
+ int readLatency
+ int writeLatency
- void read(int location)
- void write(int location)

Main program:
+ System instance
loads memory trace file
execute all reads/writes based on trace file
print summary